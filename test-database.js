#!/usr/bin/env node
const { initializeDatabase, getAllTours, getAllUsers, getAllBookings, getAllPromotions, getDatabaseStats } = require('./src/database/init');

async function testDatabase() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite...\n');

    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        const success = await initializeDatabase();
        if (!success) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
            return;
        }

        console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö:\n');

        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        const stats = await getDatabaseStats();
        if (stats) {
            console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
            console.log(`   ‚Ä¢ –¢—É—Ä—ã: ${stats.tours}`);
            console.log(`   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${stats.users}`);
            console.log(`   ‚Ä¢ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${stats.bookings}`);
            console.log(`   ‚Ä¢ –ê–∫—Ü–∏–∏: ${stats.promotions}\n`);
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—É—Ä–æ–≤
        console.log('üèîÔ∏è  –¢—É—Ä—ã:');
        const tours = await getAllTours();
        if (tours) {
            console.log(tours);
        }

        console.log('\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
        const users = await getAllUsers();
        if (users) {
            console.log(users);
        }

        console.log('\nüìã –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:');
        const bookings = await getAllBookings();
        if (bookings) {
            console.log(bookings);
        }

        console.log('\nüéØ –ê–∫—Ü–∏–∏:');
        const promotions = await getAllPromotions();
        if (promotions) {
            console.log(promotions);
        }

        console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testDatabase();