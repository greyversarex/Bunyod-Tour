const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function createFrontendStructure() {
    try {
        console.log('üèóÔ∏è –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–ª–æ–∫–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É...');

        // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–ª–æ–∫–∏ (–∫—Ä–æ–º–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç—É—Ä–æ–≤)
        await prisma.tour.updateMany({
            data: { tourBlockId: null }
        });
        await prisma.tourBlock.deleteMany({});

        // –°–æ–∑–¥–∞—ë–º –±–ª–æ–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        const tourBlocks = await Promise.all([
            // 1. –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—É—Ä—ã
            prisma.tourBlock.create({
                data: {
                    title: JSON.stringify({
                        "ru": "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—É—Ä—ã",
                        "en": "Popular Tours"
                    }),
                    description: JSON.stringify({
                        "ru": "–°–∞–º—ã–µ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–µ —Ç—É—Ä—ã –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏",
                        "en": "Most popular tours of our company"
                    }),
                    slug: "popular-tours",
                    isActive: true,
                    sortOrder: 1
                }
            }),

            // 2. –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ —Ç—É—Ä—ã –ø–æ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ê–∑–∏–∏
            prisma.tourBlock.create({
                data: {
                    title: JSON.stringify({
                        "ru": "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ —Ç—É—Ä—ã –ø–æ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ê–∑–∏–∏",
                        "en": "Recommended Central Asia Tours"
                    }),
                    description: JSON.stringify({
                        "ru": "–õ—É—á—à–∏–µ —Ç—É—Ä—ã –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ê–∑–∏–µ–π",
                        "en": "Best tours to discover Central Asia"
                    }),
                    slug: "recommended-central-asia",
                    isActive: true,
                    sortOrder: 2
                }
            }),

            // 3. –¢—É—Ä—ã –ø–æ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω—É
            prisma.tourBlock.create({
                data: {
                    title: JSON.stringify({
                        "ru": "–¢—É—Ä—ã –ø–æ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω—É",
                        "en": "Tours in Tajikistan"
                    }),
                    description: JSON.stringify({
                        "ru": "–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –∫—Ä–∞—Å–æ—Ç—ã –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω–∞",
                        "en": "Discover the beauty of Tajikistan"
                    }),
                    slug: "tours-tajikistan",
                    isActive: true,
                    sortOrder: 3
                }
            }),

            // 4. –¢—É—Ä—ã –ø–æ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω—É
            prisma.tourBlock.create({
                data: {
                    title: JSON.stringify({
                        "ru": "–¢—É—Ä—ã –ø–æ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω—É",
                        "en": "Tours in Uzbekistan"
                    }),
                    description: JSON.stringify({
                        "ru": "–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –¥—Ä–µ–≤–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –í–µ–ª–∏–∫–æ–≥–æ –®—ë–ª–∫–æ–≤–æ–≥–æ –ø—É—Ç–∏",
                        "en": "Explore ancient cities of the Great Silk Road"
                    }),
                    slug: "tours-uzbekistan",
                    isActive: true,
                    sortOrder: 4
                }
            }),

            // 5. –¢—É—Ä—ã –ø–æ –ö–∏—Ä–≥–∏–∑—Å—Ç–∞–Ω—É
            prisma.tourBlock.create({
                data: {
                    title: JSON.stringify({
                        "ru": "–¢—É—Ä—ã –ø–æ –ö–∏—Ä–≥–∏–∑—Å—Ç–∞–Ω—É",
                        "en": "Tours in Kyrgyzstan"
                    }),
                    description: JSON.stringify({
                        "ru": "–ì–æ—Ä–Ω—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –∏ –∫–æ—á–µ–≤–∞—è –∫—É–ª—å—Ç—É—Ä–∞",
                        "en": "Mountain adventures and nomadic culture"
                    }),
                    slug: "tours-kyrgyzstan",
                    isActive: true,
                    sortOrder: 5
                }
            }),

            // 6. –¢—É—Ä—ã –ø–æ –¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω—É
            prisma.tourBlock.create({
                data: {
                    title: JSON.stringify({
                        "ru": "–¢—É—Ä—ã –ø–æ –¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω—É",
                        "en": "Tours in Turkmenistan"
                    }),
                    description: JSON.stringify({
                        "ru": "–ü—É—Å—Ç—ã–Ω–Ω—ã–µ –ø–µ–π–∑–∞–∂–∏ –∏ –¥—Ä–µ–≤–Ω–∏–µ –≥–æ—Ä–æ–¥–∞",
                        "en": "Desert landscapes and ancient cities"
                    }),
                    slug: "tours-turkmenistan",
                    isActive: true,
                    sortOrder: 6
                }
            })
        ]);

        console.log('‚úÖ –°–æ–∑–¥–∞–Ω–æ –±–ª–æ–∫–æ–≤ —Ç—É—Ä–æ–≤:', tourBlocks.length);

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—É—Ä—ã –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ –±–ª–æ–∫–∞–º
        const tours = await prisma.tour.findMany();
        console.log('üìã –ù–∞–π–¥–µ–Ω–æ —Ç—É—Ä–æ–≤ –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è:', tours.length);

        // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç—É—Ä—ã –ø–æ –±–ª–æ–∫–∞–º —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä–∞–Ω–∞–º
        for (const tour of tours) {
            let targetBlockId = tourBlocks[0].id; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ

            const tourTitle = JSON.parse(tour.title).ru.toLowerCase();
            const tourCountry = tour.country?.toLowerCase() || '';

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–ª–æ–∫ –ø–æ —Å—Ç—Ä–∞–Ω–µ –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é
            if (tourCountry.includes('—Ç–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω') || tourTitle.includes('–ø–∞–º–∏—Ä') || tourTitle.includes('–¥—É—à–∞–Ω–±–µ')) {
                targetBlockId = tourBlocks[2].id; // –¢—É—Ä—ã –ø–æ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω—É
            } else if (tourCountry.includes('—É–∑–±–µ–∫–∏—Å—Ç–∞–Ω') || tourTitle.includes('—Å–∞–º–∞—Ä–∫–∞–Ω–¥')) {
                targetBlockId = tourBlocks[3].id; // –¢—É—Ä—ã –ø–æ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω—É
            } else if (tourCountry.includes('–∫–∏—Ä–≥–∏–∑—Å—Ç–∞–Ω') || tourTitle.includes('–∏—Å—Å—ã–∫-–∫—É–ª—å')) {
                targetBlockId = tourBlocks[4].id; // –¢—É—Ä—ã –ø–æ –ö–∏—Ä–≥–∏–∑—Å—Ç–∞–Ω—É
            } else if (tourCountry.includes('—Ç—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω') || tourTitle.includes('–¥–∞—Ä–≤–∞–∑–∞')) {
                targetBlockId = tourBlocks[5].id; // –¢—É—Ä—ã –ø–æ –¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω—É
            } else {
                // –ï—Å–ª–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—É—é –ê–∑–∏—é
                targetBlockId = tourBlocks[1].id;
            }

            // –ï—Å–ª–∏ —Ç—É—Ä –ø–æ–ø—É–ª—è—Ä–Ω—ã–π (–≤—ã—Å–æ–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥), –¥—É–±–ª–∏—Ä—É–µ–º –µ–≥–æ –≤ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ
            if (tour.rating >= 4.8 || tour.isFeatured) {
                // –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ
                await prisma.tour.update({
                    where: { id: tour.id },
                    data: { tourBlockId: tourBlocks[0].id }
                });
                console.log(`‚úÖ –¢—É—Ä "${JSON.parse(tour.title).ru}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç—É—Ä—ã`);
            } else {
                // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –±–ª–æ–∫ –ø–æ —Å—Ç—Ä–∞–Ω–µ
                await prisma.tour.update({
                    where: { id: tour.id },
                    data: { tourBlockId: targetBlockId }
                });
                console.log(`‚úÖ –¢—É—Ä "${JSON.parse(tour.title).ru}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–ª–æ–∫ ${JSON.parse(tourBlocks.find(b => b.id === targetBlockId).title).ru}`);
            }
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const blocksWithTours = await prisma.tourBlock.findMany({
            include: {
                tours: true
            }
        });

        console.log('\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:');
        for (const block of blocksWithTours) {
            const blockTitle = JSON.parse(block.title).ru;
            console.log(`üì¶ ${blockTitle}: ${block.tours.length} —Ç—É—Ä–æ–≤`);
        }

        console.log('\nüéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:', error);
    } finally {
        await prisma.$disconnect();
    }
}

createFrontendStructure();