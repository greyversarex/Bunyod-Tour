const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—É—Ä—ã –∏–∑ sample-tour-data.js
const additionalTours = {
    samarkand: {
        "title": "–î—Ä–µ–≤–Ω–∏–π –°–∞–º–∞—Ä–∫–∞–Ω–¥ –∏ –º–∞–≤–∑–æ–ª–µ–π –ì—É—Ä-–≠–º–∏—Ä",
        "location": "–°–∞–º–∞—Ä–∫–∞–Ω–¥, –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω",
        "rating": 4.9,
        "reviews_count": 312,
        "price_from": 150,
        "currency": "$",
        "duration": "8 —á–∞—Å–æ–≤",
        "overview": "–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –±–æ–≥–∞—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é –°–∞–º–∞—Ä–∫–∞–Ω–¥–∞, –æ–¥–Ω–æ–≥–æ –∏–∑ –¥—Ä–µ–≤–Ω–µ–π—à–∏—Ö –≥–æ—Ä–æ–¥–æ–≤ –º–∏—Ä–∞. –ü–æ—Å–µ—Ç–∏—Ç–µ –∑–Ω–∞–º–µ–Ω–∏—Ç—ã–π –†–µ–≥–∏—Å—Ç–∞–Ω, –º–∞–≤–∑–æ–ª–µ–π –ì—É—Ä-–≠–º–∏—Ä –∏ –¥—Ä—É–≥–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —à–µ–¥–µ–≤—Ä—ã –í–µ–ª–∏–∫–æ–≥–æ –®—ë–ª–∫–æ–≤–æ–≥–æ –ø—É—Ç–∏.",
        "highlights": [
            "–ü–ª–æ—â–∞–¥—å –†–µ–≥–∏—Å—Ç–∞–Ω —Å —Ç—Ä–µ–º—è –º–µ–¥—Ä–µ—Å–µ",
            "–ú–∞–≤–∑–æ–ª–µ–π –ì—É—Ä-–≠–º–∏—Ä - —É—Å—ã–ø–∞–ª—å–Ω–∏—Ü–∞ –¢–∞–º–µ—Ä–ª–∞–Ω–∞",
            "–ú–µ—á–µ—Ç—å –ë–∏–±–∏-–•–∞–Ω—ã–º",
            "–î—Ä–µ–≤–Ω–∏–π –±–∞–∑–∞—Ä –°–∏–∞–±—Å–∫–∏–π"
        ]
    },
    darvaza: {
        "title": "–í—Ä–∞—Ç–∞ –∞–¥–∞: –≥–∞–∑–æ–≤—ã–π –∫—Ä–∞—Ç–µ—Ä –î–∞—Ä–≤–∞–∑–∞",
        "location": "–î–∞—à–æ–≥—É–∑, –¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω",
        "rating": 4.6,
        "reviews_count": 89,
        "price_from": 320,
        "currency": "$",
        "duration": "2 –¥–Ω—è / 1 –Ω–æ—á—å",
        "overview": "–û—Ç–ø—Ä–∞–≤—å—Ç–µ—Å—å –≤ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∫ –æ–¥–Ω–æ–º—É –∏–∑ —Å–∞–º—ã—Ö —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö —Ñ–µ–Ω–æ–º–µ–Ω–æ–≤ –ø–ª–∞–Ω–µ—Ç—ã - –≥–∞–∑–æ–≤–æ–º—É –∫—Ä–∞—Ç–µ—Ä—É –î–∞—Ä–≤–∞–∑–∞, –∏–∑–≤–µ—Å—Ç–Ω–æ–º—É –∫–∞–∫ '–í—Ä–∞—Ç–∞ –∞–¥–∞'.",
        "highlights": [
            "–ü–æ—Å–µ—â–µ–Ω–∏–µ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ–≥–æ –≥–∞–∑–æ–≤–æ–≥–æ –∫—Ä–∞—Ç–µ—Ä–∞ –î–∞—Ä–≤–∞–∑–∞",
            "–ù–æ—á—ë–≤–∫–∞ –≤ –ø—É—Å—Ç—ã–Ω–µ –ø–æ–¥ –∑–≤—ë–∑–¥–Ω—ã–º –Ω–µ–±–æ–º",
            "–§–æ—Ç–æ—Å–µ—Å—Å–∏—è –Ω–∞ —Ñ–æ–Ω–µ –≥–æ—Ä—è—â–µ–≥–æ –∫—Ä–∞—Ç–µ—Ä–∞",
            "–ü–µ—Ä–µ–µ–∑–¥ —á–µ—Ä–µ–∑ –ø—É—Å—Ç—ã–Ω—é –ö–∞—Ä–∞–∫—É–º—ã"
        ]
    },
    issyk_kul: {
        "title": "–ò—Å—Å—ã–∫-–ö—É–ª—å –∏ —É—â–µ–ª—å–µ –î–∂–µ—Ç—ã-–û–≥—É–∑",
        "location": "–ö–∞—Ä–∞–∫–æ–ª, –ö–∏—Ä–≥–∏–∑—Å—Ç–∞–Ω",
        "rating": 4.7,
        "reviews_count": 145,
        "price_from": 140,
        "currency": "$",
        "duration": "–ü–æ–ª–Ω—ã–π –¥–µ–Ω—å",
        "overview": "–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∫—Ä–∞—Å–æ—Ç—É –æ–∑–µ—Ä–∞ –ò—Å—Å—ã–∫-–ö—É–ª—å, –≤—Ç–æ—Ä–æ–≥–æ –ø–æ –≤–µ–ª–∏—á–∏–Ω–µ –≤—ã—Å–æ–∫–æ–≥–æ—Ä–Ω–æ–≥–æ –æ–∑–µ—Ä–∞ –≤ –º–∏—Ä–µ, –∏ –ø–æ—Å–µ—Ç–∏—Ç–µ –∂–∏–≤–æ–ø–∏—Å–Ω–æ–µ —É—â–µ–ª—å–µ –î–∂–µ—Ç—ã-–û–≥—É–∑ —Å –µ–≥–æ –∑–Ω–∞–º–µ–Ω–∏—Ç—ã–º–∏ –∫—Ä–∞—Å–Ω—ã–º–∏ —Å–∫–∞–ª–∞–º–∏.",
        "highlights": [
            "–û–∑–µ—Ä–æ –ò—Å—Å—ã–∫-–ö—É–ª—å - –∂–µ–º—á—É–∂–∏–Ω–∞ –¢—è–Ω—å-–®–∞–Ω—è",
            "–£—â–µ–ª—å–µ –î–∂–µ—Ç—ã-–û–≥—É–∑ —Å –∫—Ä–∞—Å–Ω—ã–º–∏ —Å–∫–∞–ª–∞–º–∏",
            "–°–∫–∞–ª–∞ '–†–∞–∑–±–∏—Ç–æ–µ —Å–µ—Ä–¥—Ü–µ'",
            "–ü–æ—Å–µ—â–µ–Ω–∏–µ –∫–∏—Ä–≥–∏–∑—Å–∫–æ–π —é—Ä—Ç—ã"
        ]
    }
};

async function addMoreTours() {
    try {
        console.log('üöÄ –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—É—Ä—ã...');

        // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–ª–æ–∫–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const tourBlocks = await prisma.tourBlock.findMany();
        const categories = await prisma.category.findMany();
        
        console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ –±–ª–æ–∫–æ–≤: ${tourBlocks.length}`);
        console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç—É—Ä—ã
        const tours = [];
        let index = 0;
        
        for (const [key, tourData] of Object.entries(additionalTours)) {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–ª–æ–∫ –¥–ª—è —Ç—É—Ä–∞
            let tourBlockId = tourBlocks.find(b => JSON.parse(b.title).ru.includes('–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è'))?.id || tourBlocks[0].id;
            let categoryId = categories.find(c => JSON.parse(c.name).ru.includes('–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ'))?.id || categories[0].id;
            
            if (key === 'darvaza') {
                categoryId = categories.find(c => JSON.parse(c.name).ru.includes('–ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–µ'))?.id || categoryId;
            } else if (key === 'issyk_kul') {
                categoryId = categories.find(c => JSON.parse(c.name).ru.includes('–û–∑–µ—Ä–Ω—ã–µ'))?.id || categoryId;
            }

            const tour = await prisma.tour.create({
                data: {
                    title: JSON.stringify({
                        "ru": tourData.title,
                        "en": tourData.title
                    }),
                    description: JSON.stringify({
                        "ru": tourData.overview,
                        "en": tourData.overview
                    }),
                    shortDesc: JSON.stringify({
                        "ru": tourData.overview.substring(0, 100) + "...",
                        "en": tourData.overview.substring(0, 100) + "..."
                    }),
                    duration: tourData.duration,
                    price: `${tourData.currency}${tourData.price_from}`,
                    originalPrice: null,
                    country: tourData.location.split(',')[1].trim(),
                    city: tourData.location.split(',')[0].trim(),
                    format: "–ì—Ä—É–ø–ø–æ–≤–æ–π",
                    durationDays: tourData.duration.includes('–¥–µ–Ω—å') ? (tourData.duration.includes('2') ? 2 : 1) : 1,
                    theme: "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ç—É—Ä–∏–∑–º",
                    startDate: new Date().toISOString().split('T')[0],
                    endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
                    images: JSON.stringify([
                        "https://images.unsplash.com/photo-1564507592333-c60657eea523?w=600&h=400&fit=crop",
                        "https://images.unsplash.com/photo-1587974928442-77dc3e0dba72?w=600&h=400&fit=crop"
                    ]),
                    mainImage: "https://images.unsplash.com/photo-1564507592333-c60657eea523?w=600&h=400&fit=crop",
                    services: JSON.stringify([
                        "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä",
                        "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–∏–¥",
                        "–û–±–µ–¥"
                    ]),
                    highlights: JSON.stringify(tourData.highlights || []),
                    itinerary: JSON.stringify([
                        {
                            "day": 1,
                            "title": "–û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
                            "description": tourData.overview
                        }
                    ]),
                    included: JSON.stringify([
                        "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
                        "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–∏–¥",
                        "–í—Ö–æ–¥–Ω—ã–µ –±–∏–ª–µ—Ç—ã",
                        "–û–±–µ–¥"
                    ]),
                    excluded: JSON.stringify([
                        "–õ–∏—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
                        "–ß–∞–µ–≤—ã–µ",
                        "–£–∂–∏–Ω"
                    ]),
                    requirements: JSON.stringify({
                        "age": "18+",
                        "fitness": "–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏"
                    }),
                    difficulty: "Medium",
                    rating: tourData.rating,
                    reviewsCount: tourData.reviews_count,
                    maxPeople: 12,
                    minPeople: 2,
                    location: JSON.stringify({
                        "name": tourData.location,
                        "coordinates": null
                    }),
                    tags: JSON.stringify([
                        "–ò—Å—Ç–æ—Ä–∏—è",
                        "–ö—É–ª—å—Ç—É—Ä–∞",
                        "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞"
                    ]),
                    isActive: true,
                    isFeatured: false,
                    categoryId: categoryId,
                    tourBlockId: tourBlockId
                }
            });
            
            tours.push(tour);
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ç—É—Ä: ${tourData.title}`);
            index++;
        }

        console.log('üéâ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—É—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
        console.log(`üìä –î–æ–±–∞–≤–ª–µ–Ω–æ —Ç—É—Ä–æ–≤: ${tours.length}`);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const totalTours = await prisma.tour.count();
        const totalBlocks = await prisma.tourBlock.count();
        
        console.log('\nüìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
        console.log(`üèîÔ∏è –í—Å–µ–≥–æ —Ç—É—Ä–æ–≤: ${totalTours}`);
        console.log(`üì¶ –í—Å–µ–≥–æ –±–ª–æ–∫–æ–≤: ${totalBlocks}`);
        console.log(`üìã –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—É—Ä–æ–≤:', error);
    } finally {
        await prisma.$disconnect();
    }
}

addMoreTours();