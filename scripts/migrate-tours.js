const { PrismaClient } = require('@prisma/client');
const path = require('path');

const prisma = new PrismaClient();

// –î–∞–Ω–Ω—ã–µ —Ç—É—Ä–æ–≤ –∏–∑ sample-tour-data.js
const sampleTours = {
    pamir_highway: {
        "title": "–ü–æ–ª–Ω—ã–π –¥–µ–Ω—å: –ü–∞–º–∏—Ä—Å–∫–æ–µ —à–æ—Å—Å–µ, –≥–æ—Ä—ã –∏ –æ–∑—ë—Ä–∞",
        "location": "–ü–∞–º–∏—Ä—Å–∫–∏–µ –≥–æ—Ä—ã, –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω",
        "rating": 4.8,
        "reviews_count": 234,
        "images": [
            "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=600&h=400&fit=crop",
            "https://images.unsplash.com/photo-1464822759844-d150b377fc24?w=600&h=400&fit=crop",
            "https://images.unsplash.com/photo-1519904981063-b0cf448d479e?w=600&h=400&fit=crop"
        ],
        "price_from": 120,
        "currency": "$",
        "duration": "6-7 —á–∞—Å–æ–≤",
        "overview": "–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∫—Ä–∞—Å–æ—Ç—É –ü–∞–º–∏—Ä—Å–∫–∏—Ö –≥–æ—Ä –≤ —ç—Ç–æ–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–º –æ–¥–Ω–æ–¥–Ω–µ–≤–Ω–æ–º —Ç—É—Ä–µ.",
        "highlights": [
            "–ü—Ä–æ–µ–∑–¥ –ø–æ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–º—É –ü–∞–º–∏—Ä—Å–∫–æ–º—É —à–æ—Å—Å–µ",
            "–ü–æ—Å–µ—â–µ–Ω–∏–µ –≤—ã—Å–æ–∫–æ–≥–æ—Ä–Ω—ã—Ö –æ–∑—ë—Ä —Å –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ —á–∏—Å—Ç–æ–π –≤–æ–¥–æ–π",
            "–ü–∞–Ω–æ—Ä–∞–º–Ω—ã–µ –≤–∏–¥—ã –Ω–∞ –≤–µ—Ä—à–∏–Ω—ã —Å–≤—ã—à–µ 7000 –º–µ—Ç—Ä–æ–≤"
        ]
    },
    culture_dushanbe: {
        "title": "–ö—É–ª—å—Ç—É—Ä–Ω—ã–π —Ç—É—Ä –ø–æ –î—É—à–∞–Ω–±–µ —Å –ø–æ—Å–µ—â–µ–Ω–∏–µ–º –º—É–∑–µ–µ–≤",
        "location": "–î—É—à–∞–Ω–±–µ, –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω",
        "rating": 4.6,
        "reviews_count": 187,
        "price_from": 65,
        "currency": "$",
        "duration": "5-6 —á–∞—Å–æ–≤",
        "overview": "–ü–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∫—É–ª—å—Ç—É—Ä–æ–π –∏ –∏—Å—Ç–æ—Ä–∏–µ–π —Å—Ç–æ–ª–∏—Ü—ã –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω–∞",
        "highlights": [
            "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –º—É–∑–µ–π –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω–∞",
            "–î–≤–æ—Ä–µ—Ü –Ω–∞—Ü–∏–∏",
            "–§–ª–∞–≥—à—Ç–æ–∫ –∏ –ø–∞—Ä–∫ –†—É–¥–∞–∫–∏"
        ]
    },
    iskanderkul: {
        "title": "–¢—Ä–µ–∫–∫–∏–Ω–≥ –∫ –æ–∑–µ—Ä—É –ò—Å–∫–∞–Ω–¥–µ—Ä–∫—É–ª—å",
        "location": "–§–∞–Ω—Å–∫–∏–µ –≥–æ—Ä—ã, –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω", 
        "rating": 4.9,
        "reviews_count": 412,
        "price_from": 95,
        "currency": "$",
        "duration": "–ü–æ–ª–Ω—ã–π –¥–µ–Ω—å",
        "overview": "–ü–æ—Ö–æ–¥ –∫ –∂–µ–º—á—É–∂–∏–Ω–µ –§–∞–Ω—Å–∫–∏—Ö –≥–æ—Ä - –æ–∑–µ—Ä—É –ò—Å–∫–∞–Ω–¥–µ—Ä–∫—É–ª—å",
        "highlights": [
            "–¢—Ä–µ–∫–∫–∏–Ω–≥ –ø–æ –≥–æ—Ä–Ω—ã–º —Ç—Ä–æ–ø–∞–º",
            "–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–æ —á–∏—Å—Ç–æ–µ –≥–æ—Ä–Ω–æ–µ –æ–∑–µ—Ä–æ",
            "–í–æ–¥–æ–ø–∞–¥ –ò—Å–∫–∞–Ω–¥–µ—Ä–∫—É–ª—å"
        ]
    },
    silk_road: {
        "title": "–®—ë–ª–∫–æ–≤—ã–π –ø—É—Ç—å: –¥—Ä–µ–≤–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –∫—Ä–µ–ø–æ—Å—Ç–∏",
        "location": "–°–µ–≤–µ—Ä–Ω—ã–π –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω",
        "rating": 4.7,
        "reviews_count": 298,
        "price_from": 150,
        "currency": "$", 
        "duration": "2 –¥–Ω—è",
        "overview": "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ —Å–ª–µ–¥–∞–º –í–µ–ª–∏–∫–æ–≥–æ –®—ë–ª–∫–æ–≤–æ–≥–æ –ø—É—Ç–∏",
        "highlights": [
            "–î—Ä–µ–≤–Ω—è—è –∫—Ä–µ–ø–æ—Å—Ç—å –•—É–¥–∂–∞–Ω–¥",
            "–ê—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–∞–º—è—Ç–Ω–∏–∫–∏",
            "–ú—É–∑–µ–π –®—ë–ª–∫–æ–≤–æ–≥–æ –ø—É—Ç–∏"
        ]
    }
};

async function migrateTours() {
    try {
        console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Ç—É—Ä–æ–≤...');

        // 1. –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫–∏ —Ç—É—Ä–æ–≤
        console.log('üì¶ –°–æ–∑–¥–∞—ë–º –±–ª–æ–∫–∏ —Ç—É—Ä–æ–≤...');
        
        const tourBlocks = await Promise.all([
            prisma.tourBlock.create({
                data: {
                    title: JSON.stringify({"ru":"–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç—É—Ä—ã –ø–æ –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω—É","en":"Recommended Tours in Tajikistan"}),
                    description: JSON.stringify({"ru":"–õ—É—á—à–∏–µ —Ç—É—Ä—ã –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω–æ–º","en":"Best tours to discover Tajikistan"}),
                    slug: "recommended-tajikistan",
                    isActive: true,
                    sortOrder: 1
                }
            }),
            prisma.tourBlock.create({
                data: {
                    title: JSON.stringify({"ru":"–ü–∞–º–∏—Ä—Å–∫–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è","en":"Pamir Adventures"}),
                    description: JSON.stringify({"ru":"–¢—É—Ä—ã –ø–æ –ü–∞–º–∏—Ä—Å–∫–∏–º –≥–æ—Ä–∞–º –∏ –≤—ã—Å–æ–∫–æ–≥–æ—Ä–Ω—ã–º –æ–∑–µ—Ä–∞–º","en":"Tours through Pamir mountains and high-altitude lakes"}),
                    slug: "pamir-adventures",
                    isActive: true,
                    sortOrder: 2
                }
            }),
            prisma.tourBlock.create({
                data: {
                    title: JSON.stringify({"ru":"–ö—É–ª—å—Ç—É—Ä–Ω–æ-–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ç—É—Ä—ã","en":"Cultural Historical Tours"}),
                    description: JSON.stringify({"ru":"–ü–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ –±–æ–≥–∞—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é –∏ –∫—É–ª—å—Ç—É—Ä—É —Ä–µ–≥–∏–æ–Ω–∞","en":"Immersion in the rich history and culture of the region"}),
                    slug: "cultural-historical",
                    isActive: true,
                    sortOrder: 3
                }
            })
        ]);

        console.log('‚úÖ –°–æ–∑–¥–∞–Ω–æ –±–ª–æ–∫–æ–≤ —Ç—É—Ä–æ–≤:', tourBlocks.length);

        // 2. –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏
        const categories = await prisma.category.findMany();
        console.log('üìã –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', categories.length);

        // 3. –°–æ–∑–¥–∞–µ–º —Ç—É—Ä—ã
        console.log('üèîÔ∏è –°–æ–∑–¥–∞—ë–º —Ç—É—Ä—ã...');
        
        const tours = [];
        let index = 0;
        
        for (const [key, tourData] of Object.entries(sampleTours)) {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–ª–æ–∫ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ç—É—Ä–∞
            let tourBlockId = tourBlocks[0].id; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ
            let categoryId = categories[0].id; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–µ—Ä–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
            
            if (key === 'pamir_highway') {
                tourBlockId = tourBlocks[1].id; // –ü–∞–º–∏—Ä—Å–∫–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è  
                categoryId = categories.find(c => JSON.parse(c.name).ru.includes('–û–¥–Ω–æ–¥–Ω–µ–≤–Ω—ã–µ'))?.id || categoryId;
            } else if (key === 'culture_dushanbe' || key === 'silk_road') {
                tourBlockId = tourBlocks[2].id; // –ö—É–ª—å—Ç—É—Ä–Ω–æ-–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ
                categoryId = categories.find(c => JSON.parse(c.name).ru.includes('–ö—É–ª—å—Ç—É—Ä–Ω–æ'))?.id || categoryId;
            } else if (key === 'iskanderkul') {
                tourBlockId = tourBlocks[1].id; // –ü–∞–º–∏—Ä—Å–∫–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è
                categoryId = categories.find(c => JSON.parse(c.name).ru.includes('–ü–æ—Ö–æ–¥—ã'))?.id || categoryId;
            }

            const tour = await prisma.tour.create({
                data: {
                    title: JSON.stringify({
                        "ru": tourData.title,
                        "en": tourData.title
                    }),
                    description: JSON.stringify({
                        "ru": tourData.overview,
                        "en": tourData.overview
                    }),
                    shortDesc: JSON.stringify({
                        "ru": tourData.overview.substring(0, 100) + "...",
                        "en": tourData.overview.substring(0, 100) + "..."
                    }),
                    duration: tourData.duration,
                    price: `${tourData.currency}${tourData.price_from}`,
                    originalPrice: null,
                    country: "–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω",
                    city: tourData.location.split(',')[0].trim(),
                    format: "–ì—Ä—É–ø–ø–æ–≤–æ–π",
                    durationDays: tourData.duration.includes('–¥–µ–Ω—å') ? (tourData.duration.includes('2') ? 2 : 1) : 1,
                    theme: "–ü—Ä–∏—Ä–æ–¥–∞ –∏ –∫—É–ª—å—Ç—É—Ä–∞",
                    startDate: new Date().toISOString().split('T')[0],
                    endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
                    images: JSON.stringify(tourData.images || []),
                    mainImage: tourData.images?.[0] || null,
                    services: JSON.stringify([
                        "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä",
                        "–ì–∏–¥",
                        "–û–±–µ–¥"
                    ]),
                    highlights: JSON.stringify(tourData.highlights || []),
                    itinerary: JSON.stringify([
                        {
                            "day": 1,
                            "title": "–û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
                            "description": tourData.overview
                        }
                    ]),
                    included: JSON.stringify([
                        "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
                        "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–∏–¥",
                        "–í—Ö–æ–¥–Ω—ã–µ –±–∏–ª–µ—Ç—ã"
                    ]),
                    excluded: JSON.stringify([
                        "–õ–∏—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
                        "–ß–∞–µ–≤—ã–µ"
                    ]),
                    requirements: JSON.stringify({
                        "age": "18+",
                        "fitness": "–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏"
                    }),
                    difficulty: "Medium",
                    rating: tourData.rating,
                    reviewsCount: tourData.reviews_count,
                    maxPeople: 15,
                    minPeople: 2,
                    location: JSON.stringify({
                        "name": tourData.location,
                        "coordinates": null
                    }),
                    tags: JSON.stringify([
                        "–ü—Ä–∏—Ä–æ–¥–∞",
                        "–ö—É–ª—å—Ç—É—Ä–∞",
                        "–ì–æ—Ä—ã"
                    ]),
                    isActive: true,
                    isFeatured: index < 2, // –ü–µ—Ä–≤—ã–µ 2 —Ç—É—Ä–∞ –¥–µ–ª–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º–∏
                    categoryId: categoryId,
                    tourBlockId: tourBlockId
                }
            });
            
            tours.push(tour);
            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ç—É—Ä: ${tourData.title}`);
            index++;
        }

        console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        console.log(`üìä –°–æ–∑–¥–∞–Ω–æ —Ç—É—Ä–æ–≤: ${tours.length}`);
        console.log(`üì¶ –°–æ–∑–¥–∞–Ω–æ –±–ª–æ–∫–æ–≤: ${tourBlocks.length}`);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    } finally {
        await prisma.$disconnect();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
migrateTours();